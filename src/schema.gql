# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthPayload {
  user: GqlUser
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

type ChangeProfileType {
  firstName: String
  lastName: String
}

type ContactType {
  email: String
  firstName: String
  id: String!
  lastName: String
  phone: String
  position: String
  socialLinks: String
}

input CreateJobSearchInput {
  description: String
  endDate: DateTime
  isActive: Boolean!
  startDate: DateTime
  title: String!
}

input DateRangeInput {
  """End date of the range (inclusive)"""
  endDate: DateTime

  """Start date of the range (inclusive)"""
  startDate: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GqlUser {
  createdAt: DateTime!
  email: String!
  firstName: String
  id: ID!
  lastActiveSearchId: String
  lastName: String
  provider: String
  providerId: String
  updatedAt: DateTime!
}

input JobSearchFilterInput {
  dateRange: DateRangeInput
  hasApplications: Boolean
  isActive: Boolean
  title: String
}

type JobSearchType {
  createdAt: DateTime!
  description: String
  endDate: DateTime
  id: ID!
  isActive: Boolean!
  startDate: DateTime!
  title: String!
  updatedAt: DateTime!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  activateJobSearch(id: String!): JobSearchType!
  archiveJobSearch(id: String!): JobSearchType!
  changePassword(input: ChangePasswordInput!): Boolean!
  createJobSearch(input: CreateJobSearchInput!): JobSearchType!
  deleteJobSearch(id: String!): JobSearchType!
  googleAuth: AuthPayload!
  googleAuthCallback(code: String!): OAuthSuccessResponse!
  login(input: LoginInput!): AuthPayload!
  logout(refreshToken: String): Boolean!
  refreshToken(input: RefreshTokenInput): RefreshTokenResponse!
  register(input: RegisterInput!): AuthPayload!
  removeOAuthConnection(connectionId: String!): Boolean!

  """Request to change email address. Sends verification code to new email."""
  requestEmailChange(input: RequestEmailChangeInput!): Boolean!

  """Request a password reset. Sends reset link to user's email."""
  requestPasswordReset(input: RequestPasswordResetInput!): Boolean!

  """Reset password using token received via email."""
  resetPassword(input: ResetPasswordInput!): Boolean!
  setLastActiveSearch(searchId: String!): Boolean!
  updateJobSearch(id: String!, input: UpdateJobSearchInput!): JobSearchType!
  updateUserProfile(data: UserInput!): ChangeProfileType!

  """Verify email change with code received at new email address."""
  verifyEmailChange(input: VerifyEmailChangeInput!): Boolean!
}

type OAuthConnectionType {
  avatarUrl: String
  createdAt: DateTime!
  displayName: String
  id: String!
  provider: String!
  providerId: String!
}

type OAuthSuccessResponse {
  success: Boolean!
  user: GqlUser!
}

input PaginationInput {
  """Number of items to return (limit)"""
  limit: Int = 10

  """Number of items to skip (offset)"""
  offset: Int = 0
}

type Query {
  getAllContacts: [ContactType!]!
  getContactById(id: String!): ContactType
  getJobSearchById(id: String!): JobSearchType
  getLastActiveSearch: String
  getMyJobSearches(filter: JobSearchFilterInput, pagination: PaginationInput): [JobSearchType!]!
  getMyOAuthConnections: [OAuthConnectionType!]!
  me: GqlUser!
}

input RefreshTokenInput {
  refreshToken: String
}

type RefreshTokenResponse {
  success: Boolean!
}

input RegisterInput {
  email: String!
  firstName: String
  lastName: String
  password: String!
}

"""Input for requesting an email change"""
input RequestEmailChangeInput {
  """New email address to change to"""
  newEmail: String!
}

"""Input for requesting a password reset"""
input RequestPasswordResetInput {
  """Email address associated with the account"""
  email: String!
}

"""New password to set"""
input ResetPasswordInput {
  newPassword: String!
  token: String!
}

input UpdateJobSearchInput {
  description: String
  endDate: DateTime
  isActive: Boolean
  startDate: DateTime
  title: String
}

input UserInput {
  firstName: String
  lastName: String
}

"""Input for verifying an email change request"""
input VerifyEmailChangeInput {
  """Verification code sent to the new email address (6 digits)"""
  verificationCode: String!
}